{"version":3,"sources":["webpack:///dialog-polyfill.a7c69dac.chunk.js","webpack:///./node_modules/dialog-polyfill/dialog-polyfill.js","webpack:///./node_modules/dialog-polyfill/dialog-polyfill.css?bc0b","webpack:///(webpack)/buildin/amd-define.js","webpack:///./node_modules/dialog-polyfill/dialog-polyfill.css","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js"],"names":["webpackJsonp","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","createsStackingContext","el","document","body","s","window","getComputedStyle","invalid","k","ok","undefined","opacity","position","webkitOverflowScrolling","parentElement","findNearestDialog","localName","safeBlur","blur","inNodeList","nodeList","node","i","length","isFormMethodDialog","hasAttribute","getAttribute","toLowerCase","dialogPolyfillInfo","dialog","this","dialog_","replacedStyleTop_","openAsModal_","setAttribute","show","bind","showModal","close","returnValue","MutationObserver","maybeHideModal","observe","attributes","attributeFilter","timeout","removed","cb","downgradeModal","delayModel","ev","target","cand","type","substr","clearTimeout","setTimeout","forEach","name","addEventListener","Object","defineProperty","set","setOpen","get","backdrop_","createElement","className","backdropClick_","replacementFormSubmit","nativeFormSubmit","call","supportCustomEvent","CustomEvent","event","x","createEvent","initCustomEvent","bubbles","cancelable","detail","prototype","Event","contains","style","zIndex","top","parentNode","removeChild","dialogPolyfill","dm","removeDialog","value","removeAttribute","e","focus","fake","insertBefore","firstChild","tabIndex","redirectedEvent","initMouseEvent","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","dispatchEvent","stopPropagation","focus_","querySelector","opts","query","map","push","join","activeElement","updateZIndex","dialogZ","backdropZ","Error","open","pushDialog","console","warn","needsCentering","reposition","nextSibling","opt_returnValue","closeEvent","element","scrollTop","documentElement","topValue","innerHeight","offsetHeight","Math","max","isInlinePositionSetByStylesheet","styleSheets","styleSheet","cssRules","j","rule","selectedNodes","querySelectorAll","selectorText","cssTop","getPropertyValue","cssBottom","bottom","forceRegisterDialog","HTMLDialogElement","registerDialog","DialogManager","pendingDialogStack","checkDOM","checkDOM_","overlay","forwardTab_","handleKey_","handleFocus_","zIndexLow_","zIndexHigh_","mo_","records","rec","c","removedNodes","Element","concat","blockDocument","childList","subtree","unblockDocument","removeEventListener","disconnect","updateStacking","dpi","last","appendChild","containedByTopDialog_","candidate","preventDefault","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","keyCode","cancelEvent","slice","indexOf","allowed","unshift","index","splice","formSubmitter","useValue","testForm","method","methodDescriptor","getOwnPropertyDescriptor","HTMLFormElement","realGet","realSet","v","defaultPrevented","form","offsetX","offsetY","submit","content","locals","version","sources","names","mappings","file","sourcesContent","sourceRoot","cssWithMappingToString","item","useSourceMap","cssMapping","btoa","sourceMapping","toComment","source","sourceMap","unescape","encodeURIComponent","JSON","stringify","list","toString","modules","mediaQuery","alreadyImportedModules","id","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","createStyleElement","styleElement","head","obj","update","remove","isProduction","noop","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","css","media","cssText","replaceText","cssNode","createTextNode","childNodes","hasDocument","DEBUG","listToStyles","getElementsByTagName","navigator","test","userAgent","parentId","_isProduction","newList","mayRemove","textStore","replacement","filter","Boolean","newStyles","part"],"mappings":"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","file":"dialog-polyfill.a7c69dac.chunk.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */\n/*!*********************************************************!*\\\n  !*** ./node_modules/dialog-polyfill/dialog-polyfill.js ***!\n  \\*********************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\n  // nb. This is for IE10 and lower _only_.\n  var supportCustomEvent = window.CustomEvent;\n  if (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n    supportCustomEvent = function CustomEvent(event, x) {\n      x = x || {};\n      var ev = document.createEvent('CustomEvent');\n      ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n      return ev;\n    };\n    supportCustomEvent.prototype = window.Event.prototype;\n  }\n\n  /**\n   * @param {Element} el to check for stacking context\n   * @return {boolean} whether this el or its parents creates a stacking context\n   */\n  function createsStackingContext(el) {\n    while (el && el !== document.body) {\n      var s = window.getComputedStyle(el);\n      var invalid = function(k, ok) {\n        return !(s[k] === undefined || s[k] === ok);\n      }\n      if (s.opacity < 1 ||\n          invalid('zIndex', 'auto') ||\n          invalid('transform', 'none') ||\n          invalid('mixBlendMode', 'normal') ||\n          invalid('filter', 'none') ||\n          invalid('perspective', 'none') ||\n          s['isolation'] === 'isolate' ||\n          s.position === 'fixed' ||\n          s.webkitOverflowScrolling === 'touch') {\n        return true;\n      }\n      el = el.parentElement;\n    }\n    return false;\n  }\n\n  /**\n   * Finds the nearest <dialog> from the passed element.\n   *\n   * @param {Element} el to search from\n   * @return {HTMLDialogElement} dialog found\n   */\n  function findNearestDialog(el) {\n    while (el) {\n      if (el.localName === 'dialog') {\n        return /** @type {HTMLDialogElement} */ (el);\n      }\n      el = el.parentElement;\n    }\n    return null;\n  }\n\n  /**\n   * Blur the specified element, as long as it's not the HTML body element.\n   * This works around an IE9/10 bug - blurring the body causes Windows to\n   * blur the whole application.\n   *\n   * @param {Element} el to blur\n   */\n  function safeBlur(el) {\n    if (el && el.blur && el !== document.body) {\n      el.blur();\n    }\n  }\n\n  /**\n   * @param {!NodeList} nodeList to search\n   * @param {Node} node to find\n   * @return {boolean} whether node is inside nodeList\n   */\n  function inNodeList(nodeList, node) {\n    for (var i = 0; i < nodeList.length; ++i) {\n      if (nodeList[i] === node) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLFormElement} el to check\n   * @return {boolean} whether this form has method=\"dialog\"\n   */\n  function isFormMethodDialog(el) {\n    if (!el || !el.hasAttribute('method')) {\n      return false;\n    }\n    return el.getAttribute('method').toLowerCase() === 'dialog';\n  }\n\n  /**\n   * @param {!HTMLDialogElement} dialog to upgrade\n   * @constructor\n   */\n  function dialogPolyfillInfo(dialog) {\n    this.dialog_ = dialog;\n    this.replacedStyleTop_ = false;\n    this.openAsModal_ = false;\n\n    // Set a11y role. Browsers that support dialog implicitly know this already.\n    if (!dialog.hasAttribute('role')) {\n      dialog.setAttribute('role', 'dialog');\n    }\n\n    dialog.show = this.show.bind(this);\n    dialog.showModal = this.showModal.bind(this);\n    dialog.close = this.close.bind(this);\n\n    if (!('returnValue' in dialog)) {\n      dialog.returnValue = '';\n    }\n\n    if ('MutationObserver' in window) {\n      var mo = new MutationObserver(this.maybeHideModal.bind(this));\n      mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n    } else {\n      // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n      // seem to fire even if the element was removed as part of a parent removal. Use the removed\n      // events to force downgrade (useful if removed/immediately added).\n      var removed = false;\n      var cb = function() {\n        removed ? this.downgradeModal() : this.maybeHideModal();\n        removed = false;\n      }.bind(this);\n      var timeout;\n      var delayModel = function(ev) {\n        if (ev.target !== dialog) { return; }  // not for a child element\n        var cand = 'DOMNodeRemoved';\n        removed |= (ev.type.substr(0, cand.length) === cand);\n        window.clearTimeout(timeout);\n        timeout = window.setTimeout(cb, 0);\n      };\n      ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n        dialog.addEventListener(name, delayModel);\n      });\n    }\n    // Note that the DOM is observed inside DialogManager while any dialog\n    // is being displayed as a modal, to catch modal removal from the DOM.\n\n    Object.defineProperty(dialog, 'open', {\n      set: this.setOpen.bind(this),\n      get: dialog.hasAttribute.bind(dialog, 'open')\n    });\n\n    this.backdrop_ = document.createElement('div');\n    this.backdrop_.className = 'backdrop';\n    this.backdrop_.addEventListener('click', this.backdropClick_.bind(this));\n  }\n\n  dialogPolyfillInfo.prototype = {\n\n    get dialog() {\n      return this.dialog_;\n    },\n\n    /**\n     * Maybe remove this dialog from the modal top layer. This is called when\n     * a modal dialog may no longer be tenable, e.g., when the dialog is no\n     * longer open or is no longer part of the DOM.\n     */\n    maybeHideModal: function() {\n      if (this.dialog_.hasAttribute('open') && document.body.contains(this.dialog_)) { return; }\n      this.downgradeModal();\n    },\n\n    /**\n     * Remove this dialog from the modal top layer, leaving it as a non-modal.\n     */\n    downgradeModal: function() {\n      if (!this.openAsModal_) { return; }\n      this.openAsModal_ = false;\n      this.dialog_.style.zIndex = '';\n\n      // This won't match the native <dialog> exactly because if the user set top on a centered\n      // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n      // possible to polyfill this perfectly.\n      if (this.replacedStyleTop_) {\n        this.dialog_.style.top = '';\n        this.replacedStyleTop_ = false;\n      }\n\n      // Clear the backdrop and remove from the manager.\n      this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n      dialogPolyfill.dm.removeDialog(this);\n    },\n\n    /**\n     * @param {boolean} value whether to open or close this dialog\n     */\n    setOpen: function(value) {\n      if (value) {\n        this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n      } else {\n        this.dialog_.removeAttribute('open');\n        this.maybeHideModal();  // nb. redundant with MutationObserver\n      }\n    },\n\n    /**\n     * Handles clicks on the fake .backdrop element, redirecting them as if\n     * they were on the dialog itself.\n     *\n     * @param {!Event} e to redirect\n     */\n    backdropClick_: function(e) {\n      if (!this.dialog_.hasAttribute('tabindex')) {\n        // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n        // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n        // would not be needed - clicks would move the implicit cursor there.\n        var fake = document.createElement('div');\n        this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n        fake.tabIndex = -1;\n        fake.focus();\n        this.dialog_.removeChild(fake);\n      } else {\n        this.dialog_.focus();\n      }\n\n      var redirectedEvent = document.createEvent('MouseEvents');\n      redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n          e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n          e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n      this.dialog_.dispatchEvent(redirectedEvent);\n      e.stopPropagation();\n    },\n\n    /**\n     * Focuses on the first focusable element within the dialog. This will always blur the current\n     * focus, even if nothing within the dialog is found.\n     */\n    focus_: function() {\n      // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n      var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n      if (!target && this.dialog_.tabIndex >= 0) {\n        target = this.dialog_;\n      }\n      if (!target) {\n        // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n        // alternative involves stepping through and trying to focus everything.\n        var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n        var query = opts.map(function(el) {\n          return el + ':not([disabled])';\n        });\n        // TODO(samthor): tabindex values that are not numeric are not focusable.\n        query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n        target = this.dialog_.querySelector(query.join(', '));\n      }\n      safeBlur(document.activeElement);\n      target && target.focus();\n    },\n\n    /**\n     * Sets the zIndex for the backdrop and dialog.\n     *\n     * @param {number} dialogZ\n     * @param {number} backdropZ\n     */\n    updateZIndex: function(dialogZ, backdropZ) {\n      if (dialogZ < backdropZ) {\n        throw new Error('dialogZ should never be < backdropZ');\n      }\n      this.dialog_.style.zIndex = dialogZ;\n      this.backdrop_.style.zIndex = backdropZ;\n    },\n\n    /**\n     * Shows the dialog. If the dialog is already open, this does nothing.\n     */\n    show: function() {\n      if (!this.dialog_.open) {\n        this.setOpen(true);\n        this.focus_();\n      }\n    },\n\n    /**\n     * Show this dialog modally.\n     */\n    showModal: function() {\n      if (this.dialog_.hasAttribute('open')) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n      }\n      if (!document.body.contains(this.dialog_)) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n      }\n      if (!dialogPolyfill.dm.pushDialog(this)) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n      }\n\n      if (createsStackingContext(this.dialog_.parentElement)) {\n        console.warn('A dialog is being shown inside a stacking context. ' +\n            'This may cause it to be unusable. For more information, see this link: ' +\n            'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n      }\n\n      this.setOpen(true);\n      this.openAsModal_ = true;\n\n      // Optionally center vertically, relative to the current viewport.\n      if (dialogPolyfill.needsCentering(this.dialog_)) {\n        dialogPolyfill.reposition(this.dialog_);\n        this.replacedStyleTop_ = true;\n      } else {\n        this.replacedStyleTop_ = false;\n      }\n\n      // Insert backdrop.\n      this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n      // Focus on whatever inside the dialog.\n      this.focus_();\n    },\n\n    /**\n     * Closes this HTMLDialogElement. This is optional vs clearing the open\n     * attribute, however this fires a 'close' event.\n     *\n     * @param {string=} opt_returnValue to use as the returnValue\n     */\n    close: function(opt_returnValue) {\n      if (!this.dialog_.hasAttribute('open')) {\n        throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n      }\n      this.setOpen(false);\n\n      // Leave returnValue untouched in case it was set directly on the element\n      if (opt_returnValue !== undefined) {\n        this.dialog_.returnValue = opt_returnValue;\n      }\n\n      // Triggering \"close\" event for any attached listeners on the <dialog>.\n      var closeEvent = new supportCustomEvent('close', {\n        bubbles: false,\n        cancelable: false\n      });\n      this.dialog_.dispatchEvent(closeEvent);\n    }\n\n  };\n\n  var dialogPolyfill = {};\n\n  dialogPolyfill.reposition = function(element) {\n    var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n    var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n    element.style.top = Math.max(scrollTop, topValue) + 'px';\n  };\n\n  dialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n    for (var i = 0; i < document.styleSheets.length; ++i) {\n      var styleSheet = document.styleSheets[i];\n      var cssRules = null;\n      // Some browsers throw on cssRules.\n      try {\n        cssRules = styleSheet.cssRules;\n      } catch (e) {}\n      if (!cssRules) { continue; }\n      for (var j = 0; j < cssRules.length; ++j) {\n        var rule = cssRules[j];\n        var selectedNodes = null;\n        // Ignore errors on invalid selector texts.\n        try {\n          selectedNodes = document.querySelectorAll(rule.selectorText);\n        } catch(e) {}\n        if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n          continue;\n        }\n        var cssTop = rule.style.getPropertyValue('top');\n        var cssBottom = rule.style.getPropertyValue('bottom');\n        if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  dialogPolyfill.needsCentering = function(dialog) {\n    var computedStyle = window.getComputedStyle(dialog);\n    if (computedStyle.position !== 'absolute') {\n      return false;\n    }\n\n    // We must determine whether the top/bottom specified value is non-auto.  In\n    // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n    // Firefox returns the used value. So we do this crazy thing instead: check\n    // the inline style and then go through CSS rules.\n    if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n        (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n      return false;\n    }\n    return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n  };\n\n  /**\n   * @param {!Element} element to force upgrade\n   */\n  dialogPolyfill.forceRegisterDialog = function(element) {\n    if (window.HTMLDialogElement || element.showModal) {\n      console.warn('This browser already supports <dialog>, the polyfill ' +\n          'may not work correctly', element);\n    }\n    if (element.localName !== 'dialog') {\n      throw new Error('Failed to register dialog: The element is not a dialog.');\n    }\n    new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n  };\n\n  /**\n   * @param {!Element} element to upgrade, if necessary\n   */\n  dialogPolyfill.registerDialog = function(element) {\n    if (!element.showModal) {\n      dialogPolyfill.forceRegisterDialog(element);\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  dialogPolyfill.DialogManager = function() {\n    /** @type {!Array<!dialogPolyfillInfo>} */\n    this.pendingDialogStack = [];\n\n    var checkDOM = this.checkDOM_.bind(this);\n\n    // The overlay is used to simulate how a modal dialog blocks the document.\n    // The blocking dialog is positioned on top of the overlay, and the rest of\n    // the dialogs on the pending dialog stack are positioned below it. In the\n    // actual implementation, the modal dialog stacking is controlled by the\n    // top layer, where z-index has no effect.\n    this.overlay = document.createElement('div');\n    this.overlay.className = '_dialog_overlay';\n    this.overlay.addEventListener('click', function(e) {\n      this.forwardTab_ = undefined;\n      e.stopPropagation();\n      checkDOM([]);  // sanity-check DOM\n    }.bind(this));\n\n    this.handleKey_ = this.handleKey_.bind(this);\n    this.handleFocus_ = this.handleFocus_.bind(this);\n\n    this.zIndexLow_ = 100000;\n    this.zIndexHigh_ = 100000 + 150;\n\n    this.forwardTab_ = undefined;\n\n    if ('MutationObserver' in window) {\n      this.mo_ = new MutationObserver(function(records) {\n        var removed = [];\n        records.forEach(function(rec) {\n          for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n            if (!(c instanceof Element)) {\n              continue;\n            } else if (c.localName === 'dialog') {\n              removed.push(c);\n            }\n            removed = removed.concat(c.querySelectorAll('dialog'));\n          }\n        });\n        removed.length && checkDOM(removed);\n      });\n    }\n  };\n\n  /**\n   * Called on the first modal dialog being shown. Adds the overlay and related\n   * handlers.\n   */\n  dialogPolyfill.DialogManager.prototype.blockDocument = function() {\n    document.documentElement.addEventListener('focus', this.handleFocus_, true);\n    document.addEventListener('keydown', this.handleKey_);\n    this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n  };\n\n  /**\n   * Called on the first modal dialog being removed, i.e., when no more modal\n   * dialogs are visible.\n   */\n  dialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n    document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n    document.removeEventListener('keydown', this.handleKey_);\n    this.mo_ && this.mo_.disconnect();\n  };\n\n  /**\n   * Updates the stacking of all known dialogs.\n   */\n  dialogPolyfill.DialogManager.prototype.updateStacking = function() {\n    var zIndex = this.zIndexHigh_;\n\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      dpi.updateZIndex(--zIndex, --zIndex);\n      if (i === 0) {\n        this.overlay.style.zIndex = --zIndex;\n      }\n    }\n\n    // Make the overlay a sibling of the dialog itself.\n    var last = this.pendingDialogStack[0];\n    if (last) {\n      var p = last.dialog.parentNode || document.body;\n      p.appendChild(this.overlay);\n    } else if (this.overlay.parentNode) {\n      this.overlay.parentNode.removeChild(this.overlay);\n    }\n  };\n\n  /**\n   * @param {Element} candidate to check if contained or is the top-most modal dialog\n   * @return {boolean} whether candidate is contained in top dialog\n   */\n  dialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n    while (candidate = findNearestDialog(candidate)) {\n      for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n        if (dpi.dialog === candidate) {\n          return i === 0;  // only valid if top-most\n        }\n      }\n      candidate = candidate.parentElement;\n    }\n    return false;\n  };\n\n  dialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n    if (this.containedByTopDialog_(event.target)) { return; }\n\n    event.preventDefault();\n    event.stopPropagation();\n    safeBlur(/** @type {Element} */ (event.target));\n\n    if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n    var dpi = this.pendingDialogStack[0];\n    var dialog = dpi.dialog;\n    var position = dialog.compareDocumentPosition(event.target);\n    if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n      if (this.forwardTab_) {  // forward\n        dpi.focus_();\n      } else {  // backwards\n        document.documentElement.focus();\n      }\n    } else {\n      // TODO: Focus after the dialog, is ignored.\n    }\n\n    return false;\n  };\n\n  dialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n    this.forwardTab_ = undefined;\n    if (event.keyCode === 27) {\n      event.preventDefault();\n      event.stopPropagation();\n      var cancelEvent = new supportCustomEvent('cancel', {\n        bubbles: false,\n        cancelable: true\n      });\n      var dpi = this.pendingDialogStack[0];\n      if (dpi && dpi.dialog.dispatchEvent(cancelEvent)) {\n        dpi.dialog.close();\n      }\n    } else if (event.keyCode === 9) {\n      this.forwardTab_ = !event.shiftKey;\n    }\n  };\n\n  /**\n   * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n   * removed and immediately readded don't stay modal, they become normal.\n   *\n   * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n   */\n  dialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n    // This operates on a clone because it may cause it to change. Each change also calls\n    // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n    // at a time?!\n    var clone = this.pendingDialogStack.slice();\n    clone.forEach(function(dpi) {\n      if (removed.indexOf(dpi.dialog) !== -1) {\n        dpi.downgradeModal();\n      } else {\n        dpi.maybeHideModal();\n      }\n    });\n  };\n\n  /**\n   * @param {!dialogPolyfillInfo} dpi\n   * @return {boolean} whether the dialog was allowed\n   */\n  dialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n    var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n    if (this.pendingDialogStack.length >= allowed) {\n      return false;\n    }\n    if (this.pendingDialogStack.unshift(dpi) === 1) {\n      this.blockDocument();\n    }\n    this.updateStacking();\n    return true;\n  };\n\n  /**\n   * @param {!dialogPolyfillInfo} dpi\n   */\n  dialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n    var index = this.pendingDialogStack.indexOf(dpi);\n    if (index === -1) { return; }\n\n    this.pendingDialogStack.splice(index, 1);\n    if (this.pendingDialogStack.length === 0) {\n      this.unblockDocument();\n    }\n    this.updateStacking();\n  };\n\n  dialogPolyfill.dm = new dialogPolyfill.DialogManager();\n  dialogPolyfill.formSubmitter = null;\n  dialogPolyfill.useValue = null;\n\n  /**\n   * Installs global handlers, such as click listers and native method overrides. These are needed\n   * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n   */\n  if (window.HTMLDialogElement === undefined) {\n\n    /**\n     * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n     * one that returns the correct value.\n     */\n    var testForm = document.createElement('form');\n    testForm.setAttribute('method', 'dialog');\n    if (testForm.method !== 'dialog') {\n      var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n      if (methodDescriptor) {\n        // TODO: older iOS and older PhantomJS fail to return the descriptor here\n        var realGet = methodDescriptor.get;\n        methodDescriptor.get = function() {\n          if (isFormMethodDialog(this)) {\n            return 'dialog';\n          }\n          return realGet.call(this);\n        };\n        var realSet = methodDescriptor.set;\n        methodDescriptor.set = function(v) {\n          if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n            return this.setAttribute('method', v);\n          }\n          return realSet.call(this, v);\n        };\n        Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n      }\n    }\n\n    /**\n     * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n     * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n     * document.activeElement.\n     */\n    document.addEventListener('click', function(ev) {\n      dialogPolyfill.formSubmitter = null;\n      dialogPolyfill.useValue = null;\n      if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n      var target = /** @type {Element} */ (ev.target);\n      if (!target || !isFormMethodDialog(target.form)) { return; }\n\n      var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n      if (!valid) {\n        if (!(target.localName === 'input' && target.type === 'image')) { return; }\n        // this is a <input type=\"image\">, which can submit forms\n        dialogPolyfill.useValue = ev.offsetX + ',' + ev.offsetY;\n      }\n\n      var dialog = findNearestDialog(target);\n      if (!dialog) { return; }\n\n      dialogPolyfill.formSubmitter = target;\n    }, false);\n\n    /**\n     * Replace the native HTMLFormElement.submit() method, as it won't fire the\n     * submit event and give us a chance to respond.\n     */\n    var nativeFormSubmit = HTMLFormElement.prototype.submit;\n    function replacementFormSubmit() {\n      if (!isFormMethodDialog(this)) {\n        return nativeFormSubmit.call(this);\n      }\n      var dialog = findNearestDialog(this);\n      dialog && dialog.close();\n    }\n    HTMLFormElement.prototype.submit = replacementFormSubmit;\n\n    /**\n     * Global form 'dialog' method handler. Closes a dialog correctly on submit\n     * and possibly sets its return value.\n     */\n    document.addEventListener('submit', function(ev) {\n      var form = /** @type {HTMLFormElement} */ (ev.target);\n      if (!isFormMethodDialog(form)) { return; }\n      ev.preventDefault();\n\n      var dialog = findNearestDialog(form);\n      if (!dialog) { return; }\n\n      // Forms can only be submitted via .submit() or a click (?), but anyway: sanity-check that\n      // the submitter is correct before using its value as .returnValue.\n      var s = dialogPolyfill.formSubmitter;\n      if (s && s.form === form) {\n        dialog.close(dialogPolyfill.useValue || s.value);\n      } else {\n        dialog.close();\n      }\n      dialogPolyfill.formSubmitter = null;\n    }, true);\n  }\n\n  dialogPolyfill['forceRegisterDialog'] = dialogPolyfill.forceRegisterDialog;\n  dialogPolyfill['registerDialog'] = dialogPolyfill.registerDialog;\n\n  if (\"function\" === 'function' && 'amd' in __webpack_require__(/*! !webpack amd define */ 4)) {\n    // AMD support\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return dialogPolyfill; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof module === 'object' && typeof module['exports'] === 'object') {\n    // CommonJS support\n    module['exports'] = dialogPolyfill;\n  } else {\n    // all others\n    window['dialogPolyfill'] = dialogPolyfill;\n  }\n})();\n\n\n/***/ }),\n/* 3 */\n/*!**********************************************************!*\\\n  !*** ./node_modules/dialog-polyfill/dialog-polyfill.css ***!\n  \\**********************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(/*! !../css-loader??ref--0-1!../postcss-loader/lib??ref--0-2!./dialog-polyfill.css */ 5);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(/*! ../vue-style-loader/lib/addStylesClient.js */ 7)(\"21310abb\", content, true);\n\n/***/ }),\n/* 4 */\n/*!***************************************!*\\\n  !*** (webpack)/buildin/amd-define.js ***!\n  \\***************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports) {\n\nmodule.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n/***/ }),\n/* 5 */\n/*!******************************************************************************************************************************************************************************************************************!*\\\n  !*** ./node_modules/css-loader?{\"autoprefixer\":false,\"sourceMap\":true,\"minimize\":true}!./node_modules/postcss-loader/lib?{\"sourceMap\":true,\"plugins\":[null]}!./node_modules/dialog-polyfill/dialog-polyfill.css ***!\n  \\******************************************************************************************************************************************************************************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(/*! ../css-loader/lib/css-base.js */ 6)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"dialog{position:absolute;left:0;right:0;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content;height:-moz-fit-content;height:-webkit-fit-content;height:fit-content;margin:auto;border:solid;padding:1em;background:#fff;color:#000;display:block}dialog:not([open]){display:none}dialog+.backdrop{background:rgba(0,0,0,.1)}._dialog_overlay,dialog+.backdrop{position:fixed;top:0;right:0;bottom:0;left:0}dialog.fixed{position:fixed;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}\", \"\", {\"version\":3,\"sources\":[\"/Users/marcokaul/Projects/dialog-polyfill-dynamic/dialog-polyfill.css\"],\"names\":[],\"mappings\":\"AAAA,OACE,kBAAmB,AACnB,OAAQ,AAAC,QAAS,AAClB,uBAAwB,AACxB,0BAA2B,AAC3B,kBAAmB,AACnB,wBAAyB,AACzB,2BAA4B,AAC5B,mBAAoB,AACpB,YAAa,AACb,aAAc,AACd,YAAa,AACb,gBAAkB,AAClB,WAAa,AACb,aAAe,CAChB,AAED,mBACE,YAAc,CACf,AAED,iBAGE,yBAA4B,CAC7B,AAED,kCALE,eAAgB,AAChB,MAAO,AAAC,QAAS,AAAC,SAAU,AAAC,MAAQ,CAOtC,AAED,aACE,eAAgB,AAChB,QAAS,AACT,mCAA8B,AAA9B,+BAA8B,AAA9B,0BAA8B,CAC/B\",\"file\":\"dialog-polyfill.css\",\"sourcesContent\":[\"dialog {\\n  position: absolute;\\n  left: 0; right: 0;\\n  width: -moz-fit-content;\\n  width: -webkit-fit-content;\\n  width: fit-content;\\n  height: -moz-fit-content;\\n  height: -webkit-fit-content;\\n  height: fit-content;\\n  margin: auto;\\n  border: solid;\\n  padding: 1em;\\n  background: white;\\n  color: black;\\n  display: block;\\n}\\n\\ndialog:not([open]) {\\n  display: none;\\n}\\n\\ndialog + .backdrop {\\n  position: fixed;\\n  top: 0; right: 0; bottom: 0; left: 0;\\n  background: rgba(0,0,0,0.1);\\n}\\n\\n._dialog_overlay {\\n  position: fixed;\\n  top: 0; right: 0; bottom: 0; left: 0;\\n}\\n\\ndialog.fixed {\\n  position: fixed;\\n  top: 50%;\\n  transform: translate(0, -50%);\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 6 */\n/*!*************************************************!*\\\n  !*** ./node_modules/css-loader/lib/css-base.js ***!\n  \\*************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 7 */\n/*!**************************************************************!*\\\n  !*** ./node_modules/vue-style-loader/lib/addStylesClient.js ***!\n  \\**************************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(/*! ./listToStyles */ 8)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 8 */\n/*!***********************************************************!*\\\n  !*** ./node_modules/vue-style-loader/lib/listToStyles.js ***!\n  \\***********************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// dialog-polyfill.a7c69dac.chunk.js","(function() {\n\n  // nb. This is for IE10 and lower _only_.\n  var supportCustomEvent = window.CustomEvent;\n  if (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n    supportCustomEvent = function CustomEvent(event, x) {\n      x = x || {};\n      var ev = document.createEvent('CustomEvent');\n      ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n      return ev;\n    };\n    supportCustomEvent.prototype = window.Event.prototype;\n  }\n\n  /**\n   * @param {Element} el to check for stacking context\n   * @return {boolean} whether this el or its parents creates a stacking context\n   */\n  function createsStackingContext(el) {\n    while (el && el !== document.body) {\n      var s = window.getComputedStyle(el);\n      var invalid = function(k, ok) {\n        return !(s[k] === undefined || s[k] === ok);\n      }\n      if (s.opacity < 1 ||\n          invalid('zIndex', 'auto') ||\n          invalid('transform', 'none') ||\n          invalid('mixBlendMode', 'normal') ||\n          invalid('filter', 'none') ||\n          invalid('perspective', 'none') ||\n          s['isolation'] === 'isolate' ||\n          s.position === 'fixed' ||\n          s.webkitOverflowScrolling === 'touch') {\n        return true;\n      }\n      el = el.parentElement;\n    }\n    return false;\n  }\n\n  /**\n   * Finds the nearest <dialog> from the passed element.\n   *\n   * @param {Element} el to search from\n   * @return {HTMLDialogElement} dialog found\n   */\n  function findNearestDialog(el) {\n    while (el) {\n      if (el.localName === 'dialog') {\n        return /** @type {HTMLDialogElement} */ (el);\n      }\n      el = el.parentElement;\n    }\n    return null;\n  }\n\n  /**\n   * Blur the specified element, as long as it's not the HTML body element.\n   * This works around an IE9/10 bug - blurring the body causes Windows to\n   * blur the whole application.\n   *\n   * @param {Element} el to blur\n   */\n  function safeBlur(el) {\n    if (el && el.blur && el !== document.body) {\n      el.blur();\n    }\n  }\n\n  /**\n   * @param {!NodeList} nodeList to search\n   * @param {Node} node to find\n   * @return {boolean} whether node is inside nodeList\n   */\n  function inNodeList(nodeList, node) {\n    for (var i = 0; i < nodeList.length; ++i) {\n      if (nodeList[i] === node) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLFormElement} el to check\n   * @return {boolean} whether this form has method=\"dialog\"\n   */\n  function isFormMethodDialog(el) {\n    if (!el || !el.hasAttribute('method')) {\n      return false;\n    }\n    return el.getAttribute('method').toLowerCase() === 'dialog';\n  }\n\n  /**\n   * @param {!HTMLDialogElement} dialog to upgrade\n   * @constructor\n   */\n  function dialogPolyfillInfo(dialog) {\n    this.dialog_ = dialog;\n    this.replacedStyleTop_ = false;\n    this.openAsModal_ = false;\n\n    // Set a11y role. Browsers that support dialog implicitly know this already.\n    if (!dialog.hasAttribute('role')) {\n      dialog.setAttribute('role', 'dialog');\n    }\n\n    dialog.show = this.show.bind(this);\n    dialog.showModal = this.showModal.bind(this);\n    dialog.close = this.close.bind(this);\n\n    if (!('returnValue' in dialog)) {\n      dialog.returnValue = '';\n    }\n\n    if ('MutationObserver' in window) {\n      var mo = new MutationObserver(this.maybeHideModal.bind(this));\n      mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n    } else {\n      // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n      // seem to fire even if the element was removed as part of a parent removal. Use the removed\n      // events to force downgrade (useful if removed/immediately added).\n      var removed = false;\n      var cb = function() {\n        removed ? this.downgradeModal() : this.maybeHideModal();\n        removed = false;\n      }.bind(this);\n      var timeout;\n      var delayModel = function(ev) {\n        if (ev.target !== dialog) { return; }  // not for a child element\n        var cand = 'DOMNodeRemoved';\n        removed |= (ev.type.substr(0, cand.length) === cand);\n        window.clearTimeout(timeout);\n        timeout = window.setTimeout(cb, 0);\n      };\n      ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n        dialog.addEventListener(name, delayModel);\n      });\n    }\n    // Note that the DOM is observed inside DialogManager while any dialog\n    // is being displayed as a modal, to catch modal removal from the DOM.\n\n    Object.defineProperty(dialog, 'open', {\n      set: this.setOpen.bind(this),\n      get: dialog.hasAttribute.bind(dialog, 'open')\n    });\n\n    this.backdrop_ = document.createElement('div');\n    this.backdrop_.className = 'backdrop';\n    this.backdrop_.addEventListener('click', this.backdropClick_.bind(this));\n  }\n\n  dialogPolyfillInfo.prototype = {\n\n    get dialog() {\n      return this.dialog_;\n    },\n\n    /**\n     * Maybe remove this dialog from the modal top layer. This is called when\n     * a modal dialog may no longer be tenable, e.g., when the dialog is no\n     * longer open or is no longer part of the DOM.\n     */\n    maybeHideModal: function() {\n      if (this.dialog_.hasAttribute('open') && document.body.contains(this.dialog_)) { return; }\n      this.downgradeModal();\n    },\n\n    /**\n     * Remove this dialog from the modal top layer, leaving it as a non-modal.\n     */\n    downgradeModal: function() {\n      if (!this.openAsModal_) { return; }\n      this.openAsModal_ = false;\n      this.dialog_.style.zIndex = '';\n\n      // This won't match the native <dialog> exactly because if the user set top on a centered\n      // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n      // possible to polyfill this perfectly.\n      if (this.replacedStyleTop_) {\n        this.dialog_.style.top = '';\n        this.replacedStyleTop_ = false;\n      }\n\n      // Clear the backdrop and remove from the manager.\n      this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n      dialogPolyfill.dm.removeDialog(this);\n    },\n\n    /**\n     * @param {boolean} value whether to open or close this dialog\n     */\n    setOpen: function(value) {\n      if (value) {\n        this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n      } else {\n        this.dialog_.removeAttribute('open');\n        this.maybeHideModal();  // nb. redundant with MutationObserver\n      }\n    },\n\n    /**\n     * Handles clicks on the fake .backdrop element, redirecting them as if\n     * they were on the dialog itself.\n     *\n     * @param {!Event} e to redirect\n     */\n    backdropClick_: function(e) {\n      if (!this.dialog_.hasAttribute('tabindex')) {\n        // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n        // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n        // would not be needed - clicks would move the implicit cursor there.\n        var fake = document.createElement('div');\n        this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n        fake.tabIndex = -1;\n        fake.focus();\n        this.dialog_.removeChild(fake);\n      } else {\n        this.dialog_.focus();\n      }\n\n      var redirectedEvent = document.createEvent('MouseEvents');\n      redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n          e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n          e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n      this.dialog_.dispatchEvent(redirectedEvent);\n      e.stopPropagation();\n    },\n\n    /**\n     * Focuses on the first focusable element within the dialog. This will always blur the current\n     * focus, even if nothing within the dialog is found.\n     */\n    focus_: function() {\n      // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n      var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n      if (!target && this.dialog_.tabIndex >= 0) {\n        target = this.dialog_;\n      }\n      if (!target) {\n        // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n        // alternative involves stepping through and trying to focus everything.\n        var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n        var query = opts.map(function(el) {\n          return el + ':not([disabled])';\n        });\n        // TODO(samthor): tabindex values that are not numeric are not focusable.\n        query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n        target = this.dialog_.querySelector(query.join(', '));\n      }\n      safeBlur(document.activeElement);\n      target && target.focus();\n    },\n\n    /**\n     * Sets the zIndex for the backdrop and dialog.\n     *\n     * @param {number} dialogZ\n     * @param {number} backdropZ\n     */\n    updateZIndex: function(dialogZ, backdropZ) {\n      if (dialogZ < backdropZ) {\n        throw new Error('dialogZ should never be < backdropZ');\n      }\n      this.dialog_.style.zIndex = dialogZ;\n      this.backdrop_.style.zIndex = backdropZ;\n    },\n\n    /**\n     * Shows the dialog. If the dialog is already open, this does nothing.\n     */\n    show: function() {\n      if (!this.dialog_.open) {\n        this.setOpen(true);\n        this.focus_();\n      }\n    },\n\n    /**\n     * Show this dialog modally.\n     */\n    showModal: function() {\n      if (this.dialog_.hasAttribute('open')) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n      }\n      if (!document.body.contains(this.dialog_)) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n      }\n      if (!dialogPolyfill.dm.pushDialog(this)) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n      }\n\n      if (createsStackingContext(this.dialog_.parentElement)) {\n        console.warn('A dialog is being shown inside a stacking context. ' +\n            'This may cause it to be unusable. For more information, see this link: ' +\n            'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n      }\n\n      this.setOpen(true);\n      this.openAsModal_ = true;\n\n      // Optionally center vertically, relative to the current viewport.\n      if (dialogPolyfill.needsCentering(this.dialog_)) {\n        dialogPolyfill.reposition(this.dialog_);\n        this.replacedStyleTop_ = true;\n      } else {\n        this.replacedStyleTop_ = false;\n      }\n\n      // Insert backdrop.\n      this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n      // Focus on whatever inside the dialog.\n      this.focus_();\n    },\n\n    /**\n     * Closes this HTMLDialogElement. This is optional vs clearing the open\n     * attribute, however this fires a 'close' event.\n     *\n     * @param {string=} opt_returnValue to use as the returnValue\n     */\n    close: function(opt_returnValue) {\n      if (!this.dialog_.hasAttribute('open')) {\n        throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n      }\n      this.setOpen(false);\n\n      // Leave returnValue untouched in case it was set directly on the element\n      if (opt_returnValue !== undefined) {\n        this.dialog_.returnValue = opt_returnValue;\n      }\n\n      // Triggering \"close\" event for any attached listeners on the <dialog>.\n      var closeEvent = new supportCustomEvent('close', {\n        bubbles: false,\n        cancelable: false\n      });\n      this.dialog_.dispatchEvent(closeEvent);\n    }\n\n  };\n\n  var dialogPolyfill = {};\n\n  dialogPolyfill.reposition = function(element) {\n    var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n    var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n    element.style.top = Math.max(scrollTop, topValue) + 'px';\n  };\n\n  dialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n    for (var i = 0; i < document.styleSheets.length; ++i) {\n      var styleSheet = document.styleSheets[i];\n      var cssRules = null;\n      // Some browsers throw on cssRules.\n      try {\n        cssRules = styleSheet.cssRules;\n      } catch (e) {}\n      if (!cssRules) { continue; }\n      for (var j = 0; j < cssRules.length; ++j) {\n        var rule = cssRules[j];\n        var selectedNodes = null;\n        // Ignore errors on invalid selector texts.\n        try {\n          selectedNodes = document.querySelectorAll(rule.selectorText);\n        } catch(e) {}\n        if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n          continue;\n        }\n        var cssTop = rule.style.getPropertyValue('top');\n        var cssBottom = rule.style.getPropertyValue('bottom');\n        if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  dialogPolyfill.needsCentering = function(dialog) {\n    var computedStyle = window.getComputedStyle(dialog);\n    if (computedStyle.position !== 'absolute') {\n      return false;\n    }\n\n    // We must determine whether the top/bottom specified value is non-auto.  In\n    // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n    // Firefox returns the used value. So we do this crazy thing instead: check\n    // the inline style and then go through CSS rules.\n    if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n        (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n      return false;\n    }\n    return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n  };\n\n  /**\n   * @param {!Element} element to force upgrade\n   */\n  dialogPolyfill.forceRegisterDialog = function(element) {\n    if (window.HTMLDialogElement || element.showModal) {\n      console.warn('This browser already supports <dialog>, the polyfill ' +\n          'may not work correctly', element);\n    }\n    if (element.localName !== 'dialog') {\n      throw new Error('Failed to register dialog: The element is not a dialog.');\n    }\n    new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n  };\n\n  /**\n   * @param {!Element} element to upgrade, if necessary\n   */\n  dialogPolyfill.registerDialog = function(element) {\n    if (!element.showModal) {\n      dialogPolyfill.forceRegisterDialog(element);\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  dialogPolyfill.DialogManager = function() {\n    /** @type {!Array<!dialogPolyfillInfo>} */\n    this.pendingDialogStack = [];\n\n    var checkDOM = this.checkDOM_.bind(this);\n\n    // The overlay is used to simulate how a modal dialog blocks the document.\n    // The blocking dialog is positioned on top of the overlay, and the rest of\n    // the dialogs on the pending dialog stack are positioned below it. In the\n    // actual implementation, the modal dialog stacking is controlled by the\n    // top layer, where z-index has no effect.\n    this.overlay = document.createElement('div');\n    this.overlay.className = '_dialog_overlay';\n    this.overlay.addEventListener('click', function(e) {\n      this.forwardTab_ = undefined;\n      e.stopPropagation();\n      checkDOM([]);  // sanity-check DOM\n    }.bind(this));\n\n    this.handleKey_ = this.handleKey_.bind(this);\n    this.handleFocus_ = this.handleFocus_.bind(this);\n\n    this.zIndexLow_ = 100000;\n    this.zIndexHigh_ = 100000 + 150;\n\n    this.forwardTab_ = undefined;\n\n    if ('MutationObserver' in window) {\n      this.mo_ = new MutationObserver(function(records) {\n        var removed = [];\n        records.forEach(function(rec) {\n          for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n            if (!(c instanceof Element)) {\n              continue;\n            } else if (c.localName === 'dialog') {\n              removed.push(c);\n            }\n            removed = removed.concat(c.querySelectorAll('dialog'));\n          }\n        });\n        removed.length && checkDOM(removed);\n      });\n    }\n  };\n\n  /**\n   * Called on the first modal dialog being shown. Adds the overlay and related\n   * handlers.\n   */\n  dialogPolyfill.DialogManager.prototype.blockDocument = function() {\n    document.documentElement.addEventListener('focus', this.handleFocus_, true);\n    document.addEventListener('keydown', this.handleKey_);\n    this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n  };\n\n  /**\n   * Called on the first modal dialog being removed, i.e., when no more modal\n   * dialogs are visible.\n   */\n  dialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n    document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n    document.removeEventListener('keydown', this.handleKey_);\n    this.mo_ && this.mo_.disconnect();\n  };\n\n  /**\n   * Updates the stacking of all known dialogs.\n   */\n  dialogPolyfill.DialogManager.prototype.updateStacking = function() {\n    var zIndex = this.zIndexHigh_;\n\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      dpi.updateZIndex(--zIndex, --zIndex);\n      if (i === 0) {\n        this.overlay.style.zIndex = --zIndex;\n      }\n    }\n\n    // Make the overlay a sibling of the dialog itself.\n    var last = this.pendingDialogStack[0];\n    if (last) {\n      var p = last.dialog.parentNode || document.body;\n      p.appendChild(this.overlay);\n    } else if (this.overlay.parentNode) {\n      this.overlay.parentNode.removeChild(this.overlay);\n    }\n  };\n\n  /**\n   * @param {Element} candidate to check if contained or is the top-most modal dialog\n   * @return {boolean} whether candidate is contained in top dialog\n   */\n  dialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n    while (candidate = findNearestDialog(candidate)) {\n      for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n        if (dpi.dialog === candidate) {\n          return i === 0;  // only valid if top-most\n        }\n      }\n      candidate = candidate.parentElement;\n    }\n    return false;\n  };\n\n  dialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n    if (this.containedByTopDialog_(event.target)) { return; }\n\n    event.preventDefault();\n    event.stopPropagation();\n    safeBlur(/** @type {Element} */ (event.target));\n\n    if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n    var dpi = this.pendingDialogStack[0];\n    var dialog = dpi.dialog;\n    var position = dialog.compareDocumentPosition(event.target);\n    if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n      if (this.forwardTab_) {  // forward\n        dpi.focus_();\n      } else {  // backwards\n        document.documentElement.focus();\n      }\n    } else {\n      // TODO: Focus after the dialog, is ignored.\n    }\n\n    return false;\n  };\n\n  dialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n    this.forwardTab_ = undefined;\n    if (event.keyCode === 27) {\n      event.preventDefault();\n      event.stopPropagation();\n      var cancelEvent = new supportCustomEvent('cancel', {\n        bubbles: false,\n        cancelable: true\n      });\n      var dpi = this.pendingDialogStack[0];\n      if (dpi && dpi.dialog.dispatchEvent(cancelEvent)) {\n        dpi.dialog.close();\n      }\n    } else if (event.keyCode === 9) {\n      this.forwardTab_ = !event.shiftKey;\n    }\n  };\n\n  /**\n   * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n   * removed and immediately readded don't stay modal, they become normal.\n   *\n   * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n   */\n  dialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n    // This operates on a clone because it may cause it to change. Each change also calls\n    // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n    // at a time?!\n    var clone = this.pendingDialogStack.slice();\n    clone.forEach(function(dpi) {\n      if (removed.indexOf(dpi.dialog) !== -1) {\n        dpi.downgradeModal();\n      } else {\n        dpi.maybeHideModal();\n      }\n    });\n  };\n\n  /**\n   * @param {!dialogPolyfillInfo} dpi\n   * @return {boolean} whether the dialog was allowed\n   */\n  dialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n    var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n    if (this.pendingDialogStack.length >= allowed) {\n      return false;\n    }\n    if (this.pendingDialogStack.unshift(dpi) === 1) {\n      this.blockDocument();\n    }\n    this.updateStacking();\n    return true;\n  };\n\n  /**\n   * @param {!dialogPolyfillInfo} dpi\n   */\n  dialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n    var index = this.pendingDialogStack.indexOf(dpi);\n    if (index === -1) { return; }\n\n    this.pendingDialogStack.splice(index, 1);\n    if (this.pendingDialogStack.length === 0) {\n      this.unblockDocument();\n    }\n    this.updateStacking();\n  };\n\n  dialogPolyfill.dm = new dialogPolyfill.DialogManager();\n  dialogPolyfill.formSubmitter = null;\n  dialogPolyfill.useValue = null;\n\n  /**\n   * Installs global handlers, such as click listers and native method overrides. These are needed\n   * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n   */\n  if (window.HTMLDialogElement === undefined) {\n\n    /**\n     * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n     * one that returns the correct value.\n     */\n    var testForm = document.createElement('form');\n    testForm.setAttribute('method', 'dialog');\n    if (testForm.method !== 'dialog') {\n      var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n      if (methodDescriptor) {\n        // TODO: older iOS and older PhantomJS fail to return the descriptor here\n        var realGet = methodDescriptor.get;\n        methodDescriptor.get = function() {\n          if (isFormMethodDialog(this)) {\n            return 'dialog';\n          }\n          return realGet.call(this);\n        };\n        var realSet = methodDescriptor.set;\n        methodDescriptor.set = function(v) {\n          if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n            return this.setAttribute('method', v);\n          }\n          return realSet.call(this, v);\n        };\n        Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n      }\n    }\n\n    /**\n     * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n     * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n     * document.activeElement.\n     */\n    document.addEventListener('click', function(ev) {\n      dialogPolyfill.formSubmitter = null;\n      dialogPolyfill.useValue = null;\n      if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n      var target = /** @type {Element} */ (ev.target);\n      if (!target || !isFormMethodDialog(target.form)) { return; }\n\n      var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n      if (!valid) {\n        if (!(target.localName === 'input' && target.type === 'image')) { return; }\n        // this is a <input type=\"image\">, which can submit forms\n        dialogPolyfill.useValue = ev.offsetX + ',' + ev.offsetY;\n      }\n\n      var dialog = findNearestDialog(target);\n      if (!dialog) { return; }\n\n      dialogPolyfill.formSubmitter = target;\n    }, false);\n\n    /**\n     * Replace the native HTMLFormElement.submit() method, as it won't fire the\n     * submit event and give us a chance to respond.\n     */\n    var nativeFormSubmit = HTMLFormElement.prototype.submit;\n    function replacementFormSubmit() {\n      if (!isFormMethodDialog(this)) {\n        return nativeFormSubmit.call(this);\n      }\n      var dialog = findNearestDialog(this);\n      dialog && dialog.close();\n    }\n    HTMLFormElement.prototype.submit = replacementFormSubmit;\n\n    /**\n     * Global form 'dialog' method handler. Closes a dialog correctly on submit\n     * and possibly sets its return value.\n     */\n    document.addEventListener('submit', function(ev) {\n      var form = /** @type {HTMLFormElement} */ (ev.target);\n      if (!isFormMethodDialog(form)) { return; }\n      ev.preventDefault();\n\n      var dialog = findNearestDialog(form);\n      if (!dialog) { return; }\n\n      // Forms can only be submitted via .submit() or a click (?), but anyway: sanity-check that\n      // the submitter is correct before using its value as .returnValue.\n      var s = dialogPolyfill.formSubmitter;\n      if (s && s.form === form) {\n        dialog.close(dialogPolyfill.useValue || s.value);\n      } else {\n        dialog.close();\n      }\n      dialogPolyfill.formSubmitter = null;\n    }, true);\n  }\n\n  dialogPolyfill['forceRegisterDialog'] = dialogPolyfill.forceRegisterDialog;\n  dialogPolyfill['registerDialog'] = dialogPolyfill.registerDialog;\n\n  if (typeof define === 'function' && 'amd' in define) {\n    // AMD support\n    define(function() { return dialogPolyfill; });\n  } else if (typeof module === 'object' && typeof module['exports'] === 'object') {\n    // CommonJS support\n    module['exports'] = dialogPolyfill;\n  } else {\n    // all others\n    window['dialogPolyfill'] = dialogPolyfill;\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dialog-polyfill/dialog-polyfill.js\n// module id = 2\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/index.js??ref--0-1!../postcss-loader/lib/index.js??ref--0-2!./dialog-polyfill.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../vue-style-loader/lib/addStylesClient.js\")(\"21310abb\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dialog-polyfill/dialog-polyfill.css\n// module id = 3\n// module chunks = 0","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 4\n// module chunks = 0","exports = module.exports = require(\"../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"dialog{position:absolute;left:0;right:0;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content;height:-moz-fit-content;height:-webkit-fit-content;height:fit-content;margin:auto;border:solid;padding:1em;background:#fff;color:#000;display:block}dialog:not([open]){display:none}dialog+.backdrop{background:rgba(0,0,0,.1)}._dialog_overlay,dialog+.backdrop{position:fixed;top:0;right:0;bottom:0;left:0}dialog.fixed{position:fixed;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}\", \"\", {\"version\":3,\"sources\":[\"/Users/marcokaul/Projects/dialog-polyfill-dynamic/dialog-polyfill.css\"],\"names\":[],\"mappings\":\"AAAA,OACE,kBAAmB,AACnB,OAAQ,AAAC,QAAS,AAClB,uBAAwB,AACxB,0BAA2B,AAC3B,kBAAmB,AACnB,wBAAyB,AACzB,2BAA4B,AAC5B,mBAAoB,AACpB,YAAa,AACb,aAAc,AACd,YAAa,AACb,gBAAkB,AAClB,WAAa,AACb,aAAe,CAChB,AAED,mBACE,YAAc,CACf,AAED,iBAGE,yBAA4B,CAC7B,AAED,kCALE,eAAgB,AAChB,MAAO,AAAC,QAAS,AAAC,SAAU,AAAC,MAAQ,CAOtC,AAED,aACE,eAAgB,AAChB,QAAS,AACT,mCAA8B,AAA9B,+BAA8B,AAA9B,0BAA8B,CAC/B\",\"file\":\"dialog-polyfill.css\",\"sourcesContent\":[\"dialog {\\n  position: absolute;\\n  left: 0; right: 0;\\n  width: -moz-fit-content;\\n  width: -webkit-fit-content;\\n  width: fit-content;\\n  height: -moz-fit-content;\\n  height: -webkit-fit-content;\\n  height: fit-content;\\n  margin: auto;\\n  border: solid;\\n  padding: 1em;\\n  background: white;\\n  color: black;\\n  display: block;\\n}\\n\\ndialog:not([open]) {\\n  display: none;\\n}\\n\\ndialog + .backdrop {\\n  position: fixed;\\n  top: 0; right: 0; bottom: 0; left: 0;\\n  background: rgba(0,0,0,0.1);\\n}\\n\\n._dialog_overlay {\\n  position: fixed;\\n  top: 0; right: 0; bottom: 0; left: 0;\\n}\\n\\ndialog.fixed {\\n  position: fixed;\\n  top: 50%;\\n  transform: translate(0, -50%);\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"autoprefixer\":false,\"sourceMap\":true,\"minimize\":true}!./node_modules/postcss-loader/lib?{\"sourceMap\":true,\"plugins\":[null]}!./node_modules/dialog-polyfill/dialog-polyfill.css\n// module id = 5\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 6\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 7\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}